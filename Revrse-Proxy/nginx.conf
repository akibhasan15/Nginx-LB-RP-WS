    user  www-data;
    worker_processes  1;
    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;
    #----------------------------E V E N T S------------------------
    events {
        worker_connections  1024;
    }
    #----------------------------H T T P------------------------
    http {
      include       /etc/nginx/mime.types;
      default_type  application/octet-stream;
      log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

      access_log  /var/log/nginx/access.log  main;

      sendfile        on;
      keepalive_timeout  65;
      
      server {
        listen 80;
        listen 443 ssl;
		    #ssl  on;
        #server_name _;
        #resolver kube-dns.kube-system.svc.cluster.local valid=5s;
      
		  ssl_certificate         /etc/nginx/my-ssl/server.crt;
    	ssl_certificate_key     /etc/nginx/my-ssl/server.key;
    	#ssl_trusted_certificate /etc/nginx/my-lb-ssl/server.csr; ##NOTE: needed when you are not using self-signed cert. this file provided by CA.
        server_name _;
    
        location /healthz {
          return 200;
        }

        location /app1 {
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_pass http://127.0.0.1:6001/ ;
          proxy_set_header Host $host;
          proxy_http_version 1.1;
        }

		 location /app2 {
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_pass http://127.0.0.1:6002/ ;
          proxy_set_header Host $host;
          proxy_http_version 1.1;
        }

		 location /app3 {
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "Upgrade";
          proxy_pass http://127.0.0.1:6003/ ;
          proxy_set_header Host $host;
          proxy_http_version 1.1;
        }
      }
    }